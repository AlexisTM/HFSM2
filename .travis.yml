#sudo: false

language: cpp

notifications:
  email: true

os: linux
dist: trusty

env:
  global:
    - TMPDIR=/tmp

before_install:
  - pip install --user cpp-coveralls

matrix:
  include:

    # GCC 5
    - env: COMPILER=g++-5 BUILD_TYPE=Debug
      addons: &gcc5
        apt:
          packages: g++-5
          sources: ubuntu-toolchain-r-test

    - env: COMPILER=g++-5 BUILD_TYPE=Release
      addons: *gcc5

    # GCC 6
    - env: COMPILER=g++-6 BUILD_TYPE=Debug
      addons: &gcc6
        apt:
          packages: g++-6
          sources: ubuntu-toolchain-r-test

    - env: COMPILER=g++-6 BUILD_TYPE=Release
      addons: *gcc6

    # GCC 7
    - env: COMPILER=g++-7 BUILD_TYPE=Debug
      addons: &gcc7
        apt:
          packages: g++-7
          sources: ubuntu-toolchain-r-test

    - env: COMPILER=g++-7 BUILD_TYPE=Release
      addons: *gcc7

    # GCC 8
    - env: COMPILER=g++-8 BUILD_TYPE=Debug
      addons: &gcc8
        apt:
          packages: g++-8
          sources: ubuntu-toolchain-r-test

    - env: COMPILER=g++-8 BUILD_TYPE=Release
      addons: *gcc8

    # GCC 9
    - env: COMPILER=g++-9 BUILD_TYPE=Debug
      addons: &gcc9
        apt:
          packages: g++-9
          sources: ubuntu-toolchain-r-test

    - env: COMPILER=g++-9 BUILD_TYPE=Release
      addons: *gcc9

    # Coverage

    - env: COMPILER=g++-9 BUILD_TYPE=Coverage
      addons: *gcc9

    # Clang 3.7
    - env: COMPILER=clang++-3.7 BUILD_TYPE=Debug
      addons: &clang37
        apt:
          packages:
            - clang-3.7
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    - env: COMPILER=clang++-3.7 BUILD_TYPE=Release
      addons: *clang37

    # Clang 3.8
    - env: COMPILER=clang++-3.8 BUILD_TYPE=Debug
      addons: &clang38
        apt:
          packages:
            - clang-3.8
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    - env: COMPILER=clang++-3.8 BUILD_TYPE=Release
      addons: *clang38

    # Clang 3.9
    - env: COMPILER=clang++-3.9 BUILD_TYPE=Debug
      addons: &clang39
        apt:
          packages:
            - clang-3.9
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9

    - env: COMPILER=clang++-3.9 BUILD_TYPE=Release
      addons: *clang39

    # Clang 4.0
    - env: COMPILER=clang++-4.0 BUILD_TYPE=Debug
      addons: &clang4
        apt:
          packages:
            - clang-4.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Release
      addons: *clang4

    # Clang 5.0
    - env: COMPILER=clang++-5.0 BUILD_TYPE=Debug
      addons: &clang5
        apt:
          packages:
            - clang-5.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Release
      addons: *clang5

    # Clang 6.0
    - env: COMPILER=clang++-6.0 BUILD_TYPE=Debug
      addons: &clang6
        apt:
          packages:
            - clang-6.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Release
      addons: *clang6

    # Clang 7.0
    - env: COMPILER=clang++-7 BUILD_TYPE=Debug
      addons: &clang7
        apt:
          packages:
            - clang-7
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7

    # Clang 8.0
    - env: COMPILER=clang++-8 BUILD_TYPE=Debug
      addons: &clang8
        apt:
          packages:
            - clang-8
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8

    - env: COMPILER=clang++-8 BUILD_TYPE=Release
      addons: *clang8

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make

  - cd "${TRAVIS_BUILD_DIR}/examples/advanced_event_handling"
  - mkdir build && cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make

  - cd "${TRAVIS_BUILD_DIR}/examples/basic_audio_player"
  - mkdir build && cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make

  - cd "${TRAVIS_BUILD_DIR}/examples/basic_traffic_light"
  - mkdir build && cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make

  - cd "${TRAVIS_BUILD_DIR}/examples/debug_logger_interface"
  - mkdir build && cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make

  - cd "${TRAVIS_BUILD_DIR}/examples/snippets"
  - mkdir build && cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make

after_success:
  - bash <(curl -s https://codecov.io/bash) -f "build/hfsm2_test.profdata" || echo "Codecov did not collect coverage reports"
  - coveralls --exclude lib --exclude tests --gcov-options '\-lp'
