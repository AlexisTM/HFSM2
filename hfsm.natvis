<?xml version="1.0" encoding="utf-8"?>

<!-- https://docs.microsoft.com/en-us/visualstudio/debugger/format-specifiers-in-cpp -->

<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="std::type_index">
		<DisplayString Condition="_Tptr->_Data._UndecoratedName">{_Tptr->_Data._UndecoratedName,sb}</DisplayString>
		<DisplayString Condition="_Tptr->_Data._DecoratedName[5]=='$'">
			{&amp;_Tptr->_Data._DecoratedName[6],[strchr(_Tptr->_Data._DecoratedName,'@') - _Tptr->_Data._DecoratedName - 6]sb}
			&lt;
			{strstr(_Tptr->_Data._DecoratedName,"@V") + 2,[strstr(_Tptr->_Data._DecoratedName,"@?") - strstr(_Tptr->_Data._DecoratedName,"@V") - 2]sb}
			&gt;
		</DisplayString>
		<DisplayString>{&amp;_Tptr->_Data._DecoratedName[4],[strchr(_Tptr->_Data._DecoratedName,'@') - _Tptr->_Data._DecoratedName - 4]sb}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::ArrayView&lt;*&gt;">
		<DisplayString>{_count} / {_capacity}</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems Condition="_count > 0">
				<Size>_count</Size>
				<ValueNode>*(($T1*) &amp;((Item*) (&amp;_count + 2))[$i])</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::Array&lt;*,*&gt;">
		<DisplayString>&lt;{_count}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ArrayItems>
				<Size>_count</Size>
				<ValuePointer>_items</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::StaticArray&lt;*,*&gt;">
		<DisplayString>&lt;{$T2}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ArrayItems>
				<Size>$T2</Size>
				<ValuePointer>_items</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::BitArrayT&lt;*,*&gt;">
		<DisplayString>{(unsigned)capacity &amp; 0xFF}</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems>
				<Size>(capacity + 7 / 8)</Size>
				<ValueNode>(unsigned) (((uint8_t*) this) + OFFSET)[$i] &amp; 0xFF</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<Type Name="hfsm2::detail::BitArrayStorageT&lt;*,*&gt;">
		<DisplayString>{(unsigned)capacity &amp; 0xFF}</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems>
				<Size>(capacity + 7 / 8)</Size>
				<ValueNode>(unsigned) (((uint8_t*) this) + OFFSET)[$i] &amp; 0xFF</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::List&lt;*,*&gt;">
		<DisplayString>{_count} / {CAPACITY}</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems Condition="_count > 0">
				<Size>CAPACITY</Size>
				<ValueNode>_cells[$i]</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::List&lt;*,*&gt;::Cell">
		<DisplayString>{item}</DisplayString>
	</Type>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<Type Name="hfsm2::detail::ObjectPool&lt;*,*&gt;::Cell">
		<DisplayString>&lt;{_count}&gt;</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems Condition="_count > 0">
				<Size>_count</Size>
				<ValueNode>*($T1*) (_storage + _offsets[$i])</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<Type Name="hfsm2::detail::Parent">
		<DisplayString Condition="forkId &gt; 0">({(unsigned) ( forkId - 1) &amp; 0xFF}) ► {(unsigned) prong &amp; 0xFF}</DisplayString>
		<DisplayString Condition="forkId &lt; 0">[{(unsigned) (-forkId - 1) &amp; 0xFF}] ► {(unsigned) prong &amp; 0xFF}</DisplayString>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::CompoFork">
		<DisplayString>[{TYPE}]: &lt;{(unsigned) resumable &amp; 0xFF}&gt; ◄ ({(unsigned) active &amp; 0xFF}) ► &lt;{(unsigned) requested &amp; 0xFF}&gt;</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::Transition">
		<DisplayString>{type, en}: {*(std::type_index*)&amp;stateType._storage}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::TaskTransition">
		<DisplayString>({origin} ► {destination})</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::ControlT&lt;*,*&gt;">
		<DisplayString>{_context}</DisplayString>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::PlanControlT&lt;*,*&gt;">
		<DisplayString>({_tasks})</DisplayString>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::TransitionControlT&lt;*,*&gt;">
		<DisplayString>[{_status}]</DisplayString>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::FullControlT&lt;*,*&gt;">
		<DisplayString>[{_status}] ({_tasks})</DisplayString>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::Status">
		<DisplayString>{success} {failure} {outerTransition}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::PlanT&lt;*,*&gt;">
		<DisplayString Condition="_taskIndices.first == INVALID_LONG_INDEX">&lt;Empty&gt;</DisplayString>
		<DisplayString Condition="_taskIndices.first != INVALID_LONG_INDEX">{_taskIndices.first} .. {_taskIndices.last}</DisplayString>
		<Expand HideRawView="true">
			<Item Name="first" Condition="_taskIndices.first != INVALID_LONG_INDEX">_tasks._cells[_taskIndices.first]</Item>
			<Item Name="last"  Condition="_taskIndices.last  != INVALID_LONG_INDEX">_tasks._cells[_taskIndices.last] </Item>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::PlanT&lt;*,*&gt;::Iterator">
		<DisplayString Condition="_curr == INVALID_LONG_INDEX &amp;&amp; _next == INVALID_LONG_INDEX">&lt;Empty&gt;</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG_INDEX &amp;&amp; _next == INVALID_LONG_INDEX">{_plan._tasks._cells[_curr]}</DisplayString>
		<DisplayString Condition="_curr == INVALID_LONG_INDEX &amp;&amp; _next != INVALID_LONG_INDEX">&lt;Empty&gt;, {_plan._tasks._cells[_next]}</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG_INDEX &amp;&amp; _next != INVALID_LONG_INDEX">{_plan._tasks._cells[_curr]}, {_plan._tasks._cells[_next]}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::_S&lt;*&gt;">
		<DisplayString>{TYPE}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::_C&lt;*&gt;">
		<DisplayString>({_headState})</DisplayString>
	</Type>

	<Type Name="hfsm2::detail::_CS&lt;*&gt;">
		<DisplayString Optional="true">{initial} {remaining}</DisplayString>
		<DisplayString>{initial}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::_O&lt;*&gt;">
		<DisplayString>[{_headState}]</DisplayString>
	</Type>

	<Type Name="hfsm2::detail::_OS&lt;*&gt;">
		<DisplayString Optional="true">{initial} {remaining}</DisplayString>
		<DisplayString>{initial}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::detail::_R&lt;*&gt;">
		<DisplayString Optional="true">{_structure}</DisplayString>
		<Expand>
			<ExpandedItem Optional="true">_structure</ExpandedItem>
		</Expand>
	</Type>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<Type Name="hfsm2::Iterator&lt;*&gt;">
		<DisplayString>[{_cursor}] = {_t[_cursor]}</DisplayString>
		<Expand>
			<ExpandedItem>_container</ExpandedItem>
		</Expand>
	</Type>

	<!-- · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · -->

	<Type Name="hfsm2::StructureEntry">
		<DisplayString Condition=" isActive">█ {prefix,sub}{name,sb}</DisplayString>
		<DisplayString Condition="!isActive">░ {prefix,sub}{name,sb}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<Type Name="Event">
		<DisplayString Condition="target == 65535">{type, en} [{origin}]</DisplayString>
		<DisplayString Condition="origin == 65535">(external) {type, en} [{target}]</DisplayString>
		<DisplayString							  >[{origin}] {type, en} [{target}]</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

</AutoVisualizer>
